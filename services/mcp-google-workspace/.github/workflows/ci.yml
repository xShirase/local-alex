name: CI

on:
  push:
    branches: [ main, fix/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILDX_NO_DEFAULT_LOAD: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      env:
        GOOGLE_CLIENT_ID: test-id
        GOOGLE_CLIENT_SECRET: test-secret
        CONFIG_DIR: ./test-config
        WORKSPACE_BASE_PATH: ./test-workspace

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Test Docker build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: false
        tags: google-workspace-mcp:test
        platforms: linux/amd64,linux/arm64
        cache-from: |
          type=gha,scope=${{ github.ref_name }}-amd64
          type=gha,scope=${{ github.ref_name }}-arm64
        cache-to: |
          type=gha,mode=min,scope=${{ github.ref_name }}-amd64
          type=gha,mode=min,scope=${{ github.ref_name }}-arm64
        outputs: type=image,name=google-workspace-mcp:test

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
